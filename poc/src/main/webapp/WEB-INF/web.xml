<web-app version="2.5" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" >
  <display-name>poc</display-name>
  
  <servlet>
  	<servlet-name>mvc-dispatcher</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	<load-on-startup>1</load-on-startup>  
  </servlet>
  
  <servlet-mapping>
	<servlet-name>mvc-dispatcher</servlet-name>
	<url-pattern>/</url-pattern>
  </servlet-mapping>
 
 <!-- Begin -->
   <servlet>
    <servlet-name>Jersey REST Service</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>br.com.home.controller.rest</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
      <param-value>true</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>Jersey REST Service</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  
  <!-- End -->
  
  <listener>
    <listener-class>
		org.springframework.web.context.ContextLoaderListener
	</listener-class>
  </listener>
  
  <listener>
    <listener-class>
		org.springframework.web.context.request.RequestContextListener
	</listener-class>
  </listener>
  
<!--   <welcome-file-list> -->
<!--    	<welcome-file>login.html</welcome-file> -->
<!--   </welcome-file-list> -->
  
  <context-param>
    <param-name>contextConfigLocation</param-name>
<!--     <param-value>classpath:/WEB-INF/applicationContext.xml</param-value> -->
		<param-value>/WEB-INF/spring.xml</param-value>
  </context-param>
  
  <session-config>
	<session-timeout>3</session-timeout>
  </session-config>
	
  <!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	  

	<servlet-mapping>
  		<servlet-name>default</servlet-name>
  		<url-pattern>*.css</url-pattern>
 	</servlet-mapping>

	 <servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.js</url-pattern>
	 </servlet-mapping>
 	
	
  
</web-app>